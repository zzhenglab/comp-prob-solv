Traceback (most recent call last):
  File "C:\Users\52377\.conda\envs\chem508\lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\52377\.conda\envs\chem508\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\52377\.conda\envs\chem508\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\52377\.conda\envs\chem508\lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\52377\.conda\envs\chem508\lib\asyncio\base_events.py", line 649, in run_until_complete
    return future.result()
  File "C:\Users\52377\.conda\envs\chem508\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\52377\.conda\envs\chem508\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\52377\.conda\envs\chem508\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
import numpy as np

# Define grid size
gridsize = 4

# Create figure and axis
fig, ax = plt.subplots()

# Create gridlines
ax.set_xticks(np.arange(0, gridsize + 1, 1))
ax.set_yticks(np.arange(0, gridsize + 1, 1))
ax.grid(True)

# Set the limits of the plot
ax.set_xlim(0, gridsize)
ax.set_ylim(0, gridsize)

# Label adsorption sites
for x in range(gridsize):
    for y in range(gridsize):
        ax.text(x + 0.5, y + 0.5, 'A', ha='center', va='center')

# Define sorbent particles' positions
sorbent_positions = [(0.5, 0.5), (2.5, 0.5), (1.5, 1.5), (3.5, 1.5), (0.5, 2.5)]

# Plot sorbent particles
for (x, y) in sorbent_positions:
    ax.plot(x, y, 'o', color='blue', markersize=15, zorder=10)

# Add labels for N_s and N_a
ax.text(2, -0.5, r'$N_a = 4 \times 4 = 16$ adsorption sites', ha='center')
ax.text(2, 4.5, r'$N_s = 5$ sorbent particles', color='blue', ha='center')

# Hide ticks
ax.set_xticklabels([])
ax.set_yticklabels([])

# Show plot
plt.gca().set_aspect('equal', adjustable='box')
plt.show()
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[1], line 1[0m
[1;32m----> 1[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mplt[39;00m
[0;32m      2[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mnumpy[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mnp[39;00m
[0;32m      4[0m [38;5;66;03m# Define grid size[39;00m

[1;31mModuleNotFoundError[0m: No module named 'matplotlib'

